name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Build JAR with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set IMAGE_TAG
        id: vars
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.IMAGE_TAG }} .

      - name: Push Docker Image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.IMAGE_TAG }}

      # - name: Deploy to EC2 via SSH
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       # Stop and remove old container
      #       docker stop todo-app || true
      #       docker rm todo-app || true

      #       # Clean up unused containers/images/volumes
      #       docker system prune -af --volumes

      #       # Pull latest image
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.IMAGE_TAG }}

      #       # Run container
      #       docker run -d \
      #         --name todo-app \
      #         -e DB_URL=${{ secrets.DB_URL }} \
      #         -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
      #         -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
      #         -p 8080:8080 \
      #         ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ env.IMAGE_TAG }}

      #       # Wait for app to start (adjust sleep if needed)
      #       echo "Waiting for app to boot..."
      #       sleep 15

      #       # Health check
      #       echo "Performing health check..."
      #       curl --fail http://localhost:8080/actuator/health || (echo "App failed health check" && exit 1)

